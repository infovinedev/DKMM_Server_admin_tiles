<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.infovine.dkmm.mapper.define.TDefineWorkMapper">
  <resultMap id="BaseResultMap" type="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    <id column="work_seq" jdbcType="INTEGER" property="workSeq" />
    <result column="work_condition" jdbcType="VARCHAR" property="workCondition" />
    <result column="work_nm" jdbcType="VARCHAR" property="workNm" />
    <result column="work_cnt" jdbcType="VARCHAR" property="workCnt" />
    <result column="nick_seq" jdbcType="INTEGER" property="nickSeq" />
    <result column="point" jdbcType="VARCHAR" property="point" />
    <result column="except_condition" jdbcType="VARCHAR" property="exceptCondition" />
    <result column="start_dt" jdbcType="VARCHAR" property="startDt" />
    <result column="end_dt" jdbcType="VARCHAR" property="endDt" />
    <result column="approval_yn" jdbcType="VARCHAR" property="approvalYn" />
    <result column="del_yn" jdbcType="VARCHAR" property="delYn" />
    <result column="ins_seq" jdbcType="BIGINT" property="insSeq" />
    <result column="ins_dt" jdbcType="TIMESTAMP" property="insDt" />
    <result column="upt_seq" jdbcType="BIGINT" property="uptSeq" />
    <result column="upt_dt" jdbcType="TIMESTAMP" property="uptDt" />
    <result column="work_type" jdbcType="VARCHAR" property="workType" />
    <result column="work_text" jdbcType="VARCHAR" property="workText" />
    <result column="work_condition_desc" jdbcType="VARCHAR" property="workConditionDesc" />
    <result column="use_yn" jdbcType="VARCHAR" property="useYn" />
    <result column="zombie_yn" jdbcType="VARCHAR" property="zombieYn" />
    <result column="limit_yn" jdbcType="VARCHAR" property="limitYn" />
    <result column="unit_txt" jdbcType="VARCHAR" property="unitTxt" />
    <result column="disp_order" jdbcType="VARCHAR" property="dispOrder" />
    <result column="work_grp" jdbcType="VARCHAR" property="workGrp" />
    <result column="join_cnt" jdbcType="VARCHAR" property="joinCnt" />
    <result column="complete_cnt" jdbcType="VARCHAR" property="completeCnt" />
  </resultMap>
  
  <resultMap id="JoinResultMap" type="kr.co.infovine.dkmm.db.model.define.TDefineWork" extends="BaseResultMap">
  	<id column="work_seq" jdbcType="INTEGER" property="workSeq" />
    <id column="nick_seq" jdbcType="INTEGER" property="nickSeq" />
    <id column="work_condition" jdbcType="VARCHAR" property="workCondition" />
    <association property="nickNm" column="nick_seq"
			select="kr.co.infovine.dkmm.mapper.nicknm.TDefineNicknmMapper.selectNickNm"/>
	<association property="nickComment" column="nick_seq"
			select="kr.co.infovine.dkmm.mapper.nicknm.TDefineNicknmMapper.selectNickComment"/>
	<association property="workConditionNm" column="work_condition"
			select="kr.co.infovine.dkmm.mapper.common.TCommonCodeMapper.selectCdNm"/>
	<association property="joinCnt" column="work_seq" select="selectUserWorkJoinCnt"/>
	<association property="completeCnt" column="work_seq" select="selectUserWorkCompleteCnt"/>
  </resultMap>
  
  <select id="selectUserWorkJoinCnt" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultType="int">
  	SELECT COUNT(1) FROM t_user_work_stat WHERE work_seq = #{workSeq,jdbcType=INTEGER}
  </select>
  
  <select id="selectUserWorkCompleteCnt" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultType="int">
  	SELECT COUNT(1) FROM t_user_work_stat WHERE work_seq = #{workSeq,jdbcType=INTEGER} AND complete_yn = 'Y'
  </select>
  
	<sql id="searchCondition_history">
		<if test='searchStartDt neq null and !"".equals(searchStartDt)'>
			AND TO_CHAR(ins_dt, 'YYYY-MM-DD') BETWEEN #{searchStartDt} AND #{searchEndDt}
		</if>
		<if test='workCondition neq null and !"".equals(workCondition)'>
			AND work_condition = #{workCondition}
		</if>
		<if test='searchText neq null and !"".equals(searchText)'>
			AND work_nm LIKE CONCAT('%', #{searchText}, '%')
		</if>
	</sql>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    delete from t_define_work
    where work_seq = #{workSeq,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    insert into t_define_work (work_seq, work_condition, work_nm, 
      work_cnt, nick_seq, point, 
      except_condition, start_dt, end_dt, 
      approval_yn, del_yn, ins_seq, 
      ins_dt, upt_seq, upt_dt, 
      work_type, work_text, work_condition_desc, 
      use_yn, zombie_yn, limit_yn, 
      unit_txt)
    values (#{workSeq,jdbcType=INTEGER}, #{workCondition,jdbcType=VARCHAR}, #{workNm,jdbcType=VARCHAR}, 
      #{workCnt,jdbcType=VARCHAR}, #{nickSeq,jdbcType=BIGINT}, #{point,jdbcType=VARCHAR}, 
      #{exceptCondition,jdbcType=VARCHAR}, #{startDt,jdbcType=VARCHAR}, #{endDt,jdbcType=VARCHAR}, 
      #{approvalYn,jdbcType=VARCHAR}, #{delYn,jdbcType=VARCHAR}, #{insSeq,jdbcType=BIGINT}, 
      #{insDt,jdbcType=TIMESTAMP}, #{uptSeq,jdbcType=BIGINT}, #{uptDt,jdbcType=TIMESTAMP}, 
      #{workType,jdbcType=VARCHAR}, #{workText,jdbcType=VARCHAR}, #{workConditionDesc,jdbcType=VARCHAR}, 
      #{useYn,jdbcType=VARCHAR}, #{zombieYn,jdbcType=VARCHAR}, #{limitYn,jdbcType=VARCHAR}, 
      #{unitTxt,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    update t_define_work
    set work_condition = #{workCondition,jdbcType=VARCHAR},
      work_nm = #{workNm,jdbcType=VARCHAR},
      work_cnt = #{workCnt,jdbcType=VARCHAR},
      nick_seq = #{nickSeq,jdbcType=BIGINT},
      point = #{point,jdbcType=VARCHAR},
      except_condition = #{exceptCondition,jdbcType=VARCHAR},
      start_dt = #{startDt,jdbcType=VARCHAR},
      end_dt = #{endDt,jdbcType=VARCHAR},
      approval_yn = #{approvalYn,jdbcType=VARCHAR},
      del_yn = #{delYn,jdbcType=VARCHAR},
      ins_seq = #{insSeq,jdbcType=BIGINT},
      ins_dt = #{insDt,jdbcType=TIMESTAMP},
      upt_seq = #{uptSeq,jdbcType=BIGINT},
      upt_dt = #{uptDt,jdbcType=TIMESTAMP},
      work_type = #{workType,jdbcType=VARCHAR},
      work_text = #{workText,jdbcType=VARCHAR},
      work_condition_desc = #{workConditionDesc,jdbcType=VARCHAR},
      use_yn = #{useYn,jdbcType=VARCHAR},
      zombie_yn = #{zombieYn,jdbcType=VARCHAR},
      limit_yn = #{limitYn,jdbcType=VARCHAR},
      unit_txt = #{unitTxt,jdbcType=VARCHAR}
    where work_seq = #{workSeq,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    select work_seq, work_condition, work_nm, work_cnt, nick_seq, point, except_condition, 
    start_dt, end_dt, approval_yn, del_yn, ins_seq, ins_dt, upt_seq, upt_dt, work_type, 
    work_text, work_condition_desc, use_yn, zombie_yn, limit_yn, unit_txt
    from t_define_work
    where work_seq = #{workSeq,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    select work_seq, work_condition, work_nm, work_cnt, nick_seq, point, except_condition, 
    start_dt, end_dt, approval_yn, del_yn, ins_seq, ins_dt, upt_seq, upt_dt, work_type, 
    work_text, work_condition_desc, use_yn, zombie_yn, limit_yn, unit_txt
    from t_define_work
  </select>
  
    <select id="selectAlldefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="JoinResultMap">
    /* 업적목록 조회하기 selectAlldefineWork */
      SELECT
         ROW_NUMBER() OVER() AS rowNum
         ,a.*
      FROM (
      	SELECT
	        CASE WHEN a.limit_yn = 'Y' THEN 0 ELSE 1 END AS sortOrder1
			,CASE WHEN a.limit_yn = 'Y' THEN '기간한정' ELSE '일반' END AS sortOrderTxt1
			,a.disp_order
			,CASE WHEN a.work_condition = 'EMAIL' THEN 0 
				 WHEN a.work_condition = 'REGISTER' THEN 1
				 WHEN a.work_condition = 'LIKE' THEN 2
				 WHEN a.work_condition = 'ACT' THEN 3
				 WHEN a.work_condition = 'GET' THEN 4
			ELSE 1 END AS sortOrder2
	        ,a.work_seq
	        ,a.work_nm
	        ,a.work_condition
	        ,a.work_cnt
	        ,a.work_text
	        ,a.nick_seq
	        ,a.point
	        ,a.except_condition
	        ,a.start_dt
	        ,a.end_dt
	        ,a.work_type
	        ,a.approval_yn
	        ,a.use_yn
	        ,a.work_condition_desc
	        ,a.work_text
	        ,a.zombie_yn
	        ,a.limit_yn
	        ,a.unit_txt
	        ,a.work_grp
	      FROM t_define_work a
	      WHERE 1=1
	        AND a.del_yn = 'N'
	        AND a.approval_yn = 'Y'
	        AND a.use_yn = 'Y'
	      <include refid="searchCondition_history"></include>
	  ) a
      ORDER BY a.sortOrder1, a.disp_order, a.sortOrder2, work_seq DESC
    </select>
    
    
    <select id="selectdefineWorkDetail" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="JoinResultMap">
    /* 업적목록상세 조회하기 selectdefineWorkDetail */
     SELECT
        a.work_seq
        ,a.work_nm
        ,a.work_cnt
        ,a.work_condition
        ,a.work_text
        ,a.nick_seq
        ,CONCAT(a.point , 'P') as point
        ,a.except_condition
        ,TO_DATE(a.start_dt, 'YYYYMMDD') as start_dt
        ,TO_DATE(a.end_dt, 'YYYYMMDD') as end_dt
        ,a.ins_dt
        ,a.upt_dt
        ,(CASE
            WHEN a.work_type = 'NORMAL' THEN '일반'
            WHEN a.work_type  = 'PROMOTION' THEN '프로모션'
            ELSE '-'
            END
            ) AS work_type 
        ,a.approval_yn
        ,a.use_yn
        ,a.work_condition_desc
        ,a.work_text
        ,a.zombie_yn
        ,a.limit_yn
        ,a.unit_txt
        ,a.disp_order
        ,a.work_grp
      FROM t_define_work a
      WHERE 1=1
      AND work_seq = #{workSeq,jdbcType=INTEGER}
    </select>
    
    <select id="selectDefineWorkGetNicknm" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="BaseResultMap">
    SELECT
             a.nick_seq
            ,a.nick_nm as nickNm
            ,a.nick_comment
            ,b.seqString
      FROM t_define_nicknm	a
      left join (
            select 
                string_agg(nick_seq::varchar, '|') as seqString
            from t_define_work
            where nick_seq is not null
              AND del_yn = 'N'
              AND approval_yn = 'Y'
            AND use_yn = 'Y'
      ) b
      on 1=1
      WHERE a.del_yn = 'N'
      ORDER BY a.nick_seq desc
    </select>
    
    <update id="upDateDefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적 사용여부 수정 upDateDefineWork */
    UPDATE t_define_work 
    SET use_yn = 'N',
        upt_seq = #{uptSeq,jdbcType=BIGINT},
        upt_dt = now() 
    WHERE work_seq = #{upWorkSeq,jdbcType=INTEGER}
    </update>
    
    <insert id="insertDefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적등록 insertDefineWork */
    INSERT INTO t_define_work
      (
         work_nm
        ,work_condition
        ,work_cnt
        ,work_text
        ,point
        ,except_condition
        ,start_dt
        ,end_dt
        ,nick_seq
        ,work_type
        ,ins_dt
        ,ins_seq
        ,work_condition_desc
        ,zombie_yn
        ,limit_yn
        ,unit_txt
        ,disp_order
        ,work_grp
      )
      VALUES
      (
        #{workNm ,jdbcType=VARCHAR}
        ,#{workCondition ,jdbcType=VARCHAR}
        ,#{workCnt ,jdbcType=VARCHAR}
        ,#{workText ,jdbcType=VARCHAR}
        ,#{point ,jdbcType=VARCHAR}
        ,#{exceptCondition ,jdbcType=VARCHAR}
        ,#{startDt ,jdbcType=VARCHAR}
        ,#{endDt ,jdbcType=VARCHAR}
        ,#{nickSeq}
        ,#{workType ,jdbcType=VARCHAR}
        ,now()
        ,#{insSeq,jdbcType=BIGINT}
        ,#{workConditionDesc ,jdbcType=VARCHAR}
        ,#{zombieYn ,jdbcType=VARCHAR}
        ,#{limitYn ,jdbcType=VARCHAR}
        ,#{unitTxt ,jdbcType=VARCHAR}
        ,#{dispOrder ,jdbcType=BIGINT}
        ,#{workGrp ,jdbcType=VARCHAR}
      )
    </insert>
    <!--                                                                      업적등록 end                                                                      -->
    
    <!--                                                                      업적등록승인 start                                                                      -->
    <select id="selectAlldefineWorkApproval" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="BaseResultMap">
    SELECT  ROW_NUMBER() OVER() AS rowNum
    		,a.* 
    FROM (
		SELECT     
	    	CASE WHEN a.limit_yn = 'Y' THEN 0 ELSE 1 END AS sortOrder1
			,CASE WHEN a.limit_yn = 'Y' THEN '기간한정' ELSE '일반' END AS sortOrderTxt1
			,a.disp_order
			,CASE WHEN a.work_condition = 'EMAIL' THEN 0 
				 WHEN a.work_condition = 'REGISTER' THEN 1
				 WHEN a.work_condition = 'LIKE' THEN 2
				 WHEN a.work_condition = 'ACT' THEN 3
				 WHEN a.work_condition = 'GET' THEN 4
			ELSE 1 END AS sortOrder2
	        ,a.work_seq
	        ,(select code_name  from t_common_code where code_value = a.work_condition) AS work_condition
	        ,a.work_nm
	        ,(SELECT nick_nm FROM t_define_nicknm WHERE 1=1 AND DEL_YN = 'N' AND nick_seq = a.nick_seq) as nickNm
	        ,a.work_cnt
	        ,a.work_text
	        ,a.nick_seq
	        ,a.point
	        ,a.except_condition
	        ,a.start_dt
	        ,a.end_dt
	        ,a.work_type
	        ,(CASE WHEN a.approval_yn = 'Y' THEN '승인' 
	               WHEN a.approval_yn = 'N' THEN '승인대기' ELSE '승인취소' END) as approval_yn
	        ,(case when a.use_yn = 'Y' then '사용' else '숨김' end) as use_yn
	        ,a.work_condition_desc
	        ,a.work_text
	        ,a.zombie_yn
	        ,a.limit_yn
	        ,a.unit_txt
	        ,a.work_grp
	      FROM t_define_work a
	      WHERE 1=1
	        AND a.del_yn = 'N'
	      <include refid="searchCondition_history"></include>
	  ) a
      ORDER BY sortOrder1 ,a.disp_order, sortOrder2, work_seq DESC
    </select>
    
    <select id="selectdefineWorkApprovalDetail" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="BaseResultMap">
    /* 업적등록승인상세 조회하기 selectdefineWorkDetail */
     SELECT
      a.work_seq
      ,(select code_name  from t_common_code where code_value = a.work_condition) AS work_condition
      ,(select code_value  from t_common_code where code_value = a.work_condition) AS codeValue
      ,a.work_nm
      ,a.work_cnt
      ,a.work_text
      ,a.nick_seq
      ,a.point
      ,a.except_condition
      ,TO_DATE(a.start_dt, 'YYYYMMDD') as start_dt
      ,TO_DATE(a.end_dt, 'YYYYMMDD') as end_dt
      ,a.ins_dt
      ,a.upt_dt
      ,(CASE
        WHEN a.work_type = 'NORMAL' THEN '일반'
        WHEN a.work_type  = 'PROMOTION' THEN '프로모션'
        ELSE '-'
        END
        ) AS work_type 
        ,(SELECT nick_nm FROM t_define_nicknm WHERE 1=1 AND DEL_YN = 'N' AND nick_seq = a.nick_seq) as nickNm
        ,(SELECT nick_comment FROM t_define_nicknm WHERE 1=1 AND DEL_YN = 'N' AND nick_seq = a.nick_seq) as nickComment
        ,a.approval_yn
        ,a.use_yn
        ,a.work_condition_desc
        ,a.work_text
        ,a.zombie_yn
        ,a.limit_yn
        ,a.unit_txt
        ,a.disp_order
        ,a.work_grp
      FROM t_define_work a
      WHERE 1=1
      AND work_seq = #{workSeq,jdbcType=INTEGER}
    </select>
    
    <update id="upDateAllDefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적승인여부  수정 upDateAllDefineWork*/
    UPDATE t_define_work
             SET work_nm 				= #{workNm ,jdbcType=VARCHAR}
                ,work_condition 		= #{workCondition ,jdbcType=VARCHAR}
                ,work_cnt 				= #{workCnt ,jdbcType=VARCHAR}
                ,work_text 				= #{workText ,jdbcType=VARCHAR}
                ,point 					= #{point ,jdbcType=VARCHAR}
                ,except_condition 		= #{exceptCondition ,jdbcType=VARCHAR}
                ,start_dt 				= #{startDt ,jdbcType=VARCHAR}
                ,end_dt	 				= #{endDt ,jdbcType=VARCHAR}
                ,nick_seq 				= #{nickSeq ,jdbcType=VARCHAR}
                ,work_type	 			= #{workType ,jdbcType=VARCHAR}
                ,upt_dt 				= now()
                ,work_condition_desc 	= #{workConditionDesc ,jdbcType=VARCHAR}
                ,zombie_yn				= #{zombieYn ,jdbcType=VARCHAR}
                ,limit_yn				= #{limitYn ,jdbcType=VARCHAR}
                ,unit_txt				= #{unitTxt ,jdbcType=VARCHAR}
                ,disp_order				= #{dispOrder ,jdbcType=BIGINT}
                ,work_grp				= #{workGrp ,jdbcType=VARCHAR}
              WHERE 1=1
              AND work_seq = #{workSeq,jdbcType=INTEGER}
    </update>
    
    <delete id="deleteAllDefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적승인여부  삭제 deleteAllDefineWork*/
    DELETE 
      FROM t_define_work
     WHERE 1=1
       AND work_seq = #{workSeq,jdbcType=INTEGER}
    </delete>
    	
    <update id="upDateApproval" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적승인여부  upDateApproval */
    UPDATE t_define_work SET approval_yn  = #{approvalYn,jdbcType=VARCHAR} WHERE work_seq = #{upWorkSeq,jdbcType=INTEGER}
    </update>
    
    <update id="upDateUseYn" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적등록승인 사용여부 수정 upDateUseYn */
    UPDATE t_define_work SET use_yn = #{useYn,jdbcType=VARCHAR} WHERE work_seq = #{upWorkSeq,jdbcType=INTEGER}
    </update>
    
    <select id="selectNickComment" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="BaseResultMap">
    select nick_comment as nickComment from t_define_nicknm  where nick_seq = #{nickSeq,jdbcType=INTEGER}
    </select>
    <!--                                                                      업적등록승인 end                                                                      -->
    
	<!--     업적 현황 -->
	<select id="selectDefineWorkStat" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultType="java.util.HashMap">
		SELECT a.user_seq				AS "사용자Seq"
		 		,b.nick_name 			AS "닉네임"
		 		,fn_decrypt(b.phone) 	AS "휴대폰"
				,b.os_type 				AS "접속기기타입"
		 		,a.user_action_cnt		AS "달성횟수"
		 		,a.complete_yn			AS "달성여부"
		 		,TO_CHAR(a.complete_dt, 'yyyy-mm-dd hh:mi:ss')			AS "업적달성일자"
		 		,TO_CHAR(a.ins_dt, 'yyyy-mm-dd hh:mi:ss')				AS "첫업적등록일자"
		 		,TO_CHAR(a.upt_dt, 'yyyy-mm-dd hh:mi:ss')				AS "마지막업적등록일자"
		FROM t_user_work_stat a JOIN t_user_info b
		 						ON a.user_seq = b.user_seq
		WHERE a.work_seq = #{workSeq,jdbcType=INTEGER}				
		<if test='completeYn neq null and "Y".equals(completeYn)'>
			AND a.complete_yn = 'Y'
		</if>
		ORDER BY a.complete_dt, a.ins_dt, a.user_action_cnt DESC, b.nick_name
		
    </select>
    
    
</mapper>