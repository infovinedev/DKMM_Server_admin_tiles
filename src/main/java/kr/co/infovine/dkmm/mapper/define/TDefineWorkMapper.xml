<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.infovine.dkmm.mapper.define.TDefineWorkMapper">
  <resultMap id="BaseResultMap" type="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    <id column="work_seq" jdbcType="INTEGER" property="workSeq" />
    <result column="work_condition" jdbcType="VARCHAR" property="workCondition" />
    <result column="work_nm" jdbcType="VARCHAR" property="workNm" />
    <result column="work_cnt" jdbcType="VARCHAR" property="workCnt" />
    <result column="nick_seq" jdbcType="BIGINT" property="nickSeq" />
    <result column="point" jdbcType="VARCHAR" property="point" />
    <result column="except_condition" jdbcType="VARCHAR" property="exceptCondition" />
    <result column="start_dt" jdbcType="VARCHAR" property="startDt" />
    <result column="end_dt" jdbcType="VARCHAR" property="endDt" />
    <result column="approval_yn" jdbcType="VARCHAR" property="approvalYn" />
    <result column="del_yn" jdbcType="VARCHAR" property="delYn" />
    <result column="ins_seq" jdbcType="BIGINT" property="insSeq" />
    <result column="ins_dt" jdbcType="VARCHAR" property="insDt" />
    <result column="upt_seq" jdbcType="BIGINT" property="uptSeq" />
    <result column="upt_dt" jdbcType="VARCHAR" property="uptDt" />
    <result column="work_type" jdbcType="VARCHAR" property="workType" />
    <result column="work_text" jdbcType="VARCHAR" property="workText" />
    <result column="work_condition_desc" jdbcType="VARCHAR" property="workConditionDesc" />
    <result column="use_yn" jdbcType="VARCHAR" property="useYn" />
    <result column="zombie_yn" jdbcType="VARCHAR" property="zombieYn" />
    <result column="limit_yn" jdbcType="VARCHAR" property="limitYn" />
    <result column="unit_txt" jdbcType="VARCHAR" property="unitTxt" />
  </resultMap>
  
	<sql id="searchCondition_history">
		<if test='searchStartDt neq null and !"".equals(searchStartDt)'>
			AND TO_CHAR(ins_dt, 'YYYY-MM-DD') BETWEEN #{searchStartDt} AND #{searchEndDt}
		</if>
		<if test='workCondition neq null and !"".equals(workCondition)'>
			AND work_condition = #{workCondition}
		</if>
		<if test='searchText neq null and !"".equals(searchText)'>
			AND work_nm LIKE CONCAT('%', #{searchText}, '%')
		</if>
	</sql>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    delete from t_define_work
    where work_seq = #{workSeq,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    insert into t_define_work (work_seq, work_condition, work_nm, 
      work_cnt, nick_seq, point, 
      except_condition, start_dt, end_dt, 
      approval_yn, del_yn, ins_seq, 
      ins_dt, upt_seq, upt_dt, 
      work_type, work_text, work_condition_desc, 
      use_yn, zombie_yn, limit_yn, 
      unit_txt)
    values (#{workSeq,jdbcType=INTEGER}, #{workCondition,jdbcType=VARCHAR}, #{workNm,jdbcType=VARCHAR}, 
      #{workCnt,jdbcType=VARCHAR}, #{nickSeq,jdbcType=BIGINT}, #{point,jdbcType=VARCHAR}, 
      #{exceptCondition,jdbcType=VARCHAR}, #{startDt,jdbcType=VARCHAR}, #{endDt,jdbcType=VARCHAR}, 
      #{approvalYn,jdbcType=VARCHAR}, #{delYn,jdbcType=VARCHAR}, #{insSeq,jdbcType=BIGINT}, 
      #{insDt,jdbcType=TIMESTAMP}, #{uptSeq,jdbcType=BIGINT}, #{uptDt,jdbcType=TIMESTAMP}, 
      #{workType,jdbcType=VARCHAR}, #{workText,jdbcType=VARCHAR}, #{workConditionDesc,jdbcType=VARCHAR}, 
      #{useYn,jdbcType=VARCHAR}, #{zombieYn,jdbcType=VARCHAR}, #{limitYn,jdbcType=VARCHAR}, 
      #{unitTxt,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    update t_define_work
    set work_condition = #{workCondition,jdbcType=VARCHAR},
      work_nm = #{workNm,jdbcType=VARCHAR},
      work_cnt = #{workCnt,jdbcType=VARCHAR},
      nick_seq = #{nickSeq,jdbcType=BIGINT},
      point = #{point,jdbcType=VARCHAR},
      except_condition = #{exceptCondition,jdbcType=VARCHAR},
      start_dt = #{startDt,jdbcType=VARCHAR},
      end_dt = #{endDt,jdbcType=VARCHAR},
      approval_yn = #{approvalYn,jdbcType=VARCHAR},
      del_yn = #{delYn,jdbcType=VARCHAR},
      ins_seq = #{insSeq,jdbcType=BIGINT},
      ins_dt = #{insDt,jdbcType=TIMESTAMP},
      upt_seq = #{uptSeq,jdbcType=BIGINT},
      upt_dt = #{uptDt,jdbcType=TIMESTAMP},
      work_type = #{workType,jdbcType=VARCHAR},
      work_text = #{workText,jdbcType=VARCHAR},
      work_condition_desc = #{workConditionDesc,jdbcType=VARCHAR},
      use_yn = #{useYn,jdbcType=VARCHAR},
      zombie_yn = #{zombieYn,jdbcType=VARCHAR},
      limit_yn = #{limitYn,jdbcType=VARCHAR},
      unit_txt = #{unitTxt,jdbcType=VARCHAR}
    where work_seq = #{workSeq,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    select work_seq, work_condition, work_nm, work_cnt, nick_seq, point, except_condition, 
    start_dt, end_dt, approval_yn, del_yn, ins_seq, ins_dt, upt_seq, upt_dt, work_type, 
    work_text, work_condition_desc, use_yn, zombie_yn, limit_yn, unit_txt
    from t_define_work
    where work_seq = #{workSeq,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 23 17:41:12 KST 2022.
    -->
    select work_seq, work_condition, work_nm, work_cnt, nick_seq, point, except_condition, 
    start_dt, end_dt, approval_yn, del_yn, ins_seq, ins_dt, upt_seq, upt_dt, work_type, 
    work_text, work_condition_desc, use_yn, zombie_yn, limit_yn, unit_txt
    from t_define_work
  </select>
  
    <select id="selectAlldefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="BaseResultMap">
    /* 업적목록 조회하기 selectAlldefineWork */
      SELECT
         ROW_NUMBER() OVER() AS rowNum
        ,a.work_seq
        ,(CASE
			 WHEN a.work_condition  = 'REGISTER' THEN '대기등록'
			 WHEN a.work_condition = 'LIKE' THEN '매장 찜하기'
			 WHEN a.work_condition  = 'SEARCH' THEN '매장 검색'
			 WHEN a.work_condition  = 'PHONE' THEN '휴대폰 본인인증'
			 WHEN a.work_condition  = 'ACT' THEN '업적 달성'
			 WHEN a.work_condition  = 'CHANGE' THEN '칭호 변경'
			 WHEN a.work_condition  = 'GET' THEN '칭호 획득'
			 WHEN a.work_condition  = 'SPGET' THEN '특정 칭호 획득'
			 WHEN a.work_condition  = 'PMONEY' THEN '포인트금액'
			 WHEN a.work_condition  = 'SELF' THEN '직접입력'
				 ELSE '-'
			END
			) AS work_condition
        ,a.work_nm
        ,a.work_cnt
        ,a.work_text
        ,a.nick_seq
        ,CONCAT(a.point , 'P') as point
        ,a.except_condition
        ,a.start_dt
        ,a.end_dt
        ,a.work_type
        ,a.approval_yn
        ,a.use_yn
        ,a.work_condition_desc
        ,a.work_text
        ,a.zombie_yn
        ,a.limit_yn
        ,a.unit_txt
      FROM t_define_work a
      WHERE 1=1
        AND a.del_yn = 'N'
        AND a.approval_yn = 'Y'
        AND a.use_yn = 'Y'
      <include refid="searchCondition_history"></include>
      ORDER BY work_seq DESC
    </select>
    
    <select id="selectdefineWorkDetail" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork" resultMap="BaseResultMap">
    /* 업적목록상세 조회하기 selectdefineWorkDetail */
     SELECT
	    a.work_seq
		,(select code_name  from t_common_code where code_value = a.work_condition) AS work_condition
	    ,a.work_nm
	    ,a.work_cnt
        ,a.work_text
	    ,a.nick_seq
	    ,CONCAT(a.point , 'P') as point
	    ,a.except_condition
	    ,TO_DATE(a.start_dt, 'YYYYMMDD') as start_dt
	    ,TO_DATE(a.end_dt, 'YYYYMMDD') as end_dt
	    ,TO_CHAR(a.ins_dt, 'YYYY-MM-DD HH:MI') as ins_dt
	    ,TO_CHAR(a.upt_dt, 'YYYY-MM-DD HH:MI') as upt_dt
	    ,(CASE
			WHEN a.work_type = 'NORMAL' THEN '일반'
			WHEN a.work_type  = 'PROMOTION' THEN '프로모션'
			ELSE '-'
			END
			) AS work_type 
	    ,(SELECT nick_nm FROM t_define_nicknm WHERE 1=1 AND DEL_YN = 'N' AND nick_seq = a.nick_seq) as nick_nm
        ,(SELECT nick_comment FROM t_define_nicknm WHERE 1=1 AND DEL_YN = 'N' AND nick_seq = a.nick_seq) as nick_comment
	    ,a.approval_yn
	    ,a.use_yn
	    ,a.work_condition_desc
	    ,a.work_text
	    ,a.zombie_yn
	    ,a.limit_yn
	    ,a.unit_txt
	  FROM t_define_work a
	  WHERE 1=1
	  AND work_seq = ${workSeq}
	</select>
	
	<update id="upDateDefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
	/* 업적 사용여부 수정 upDateDefineWork */
	UPDATE t_define_work SET use_yn = 'N' WHERE work_seq = ${upWorkSeq}
	</update>
    
    <insert id="insertDefineWork" parameterType="kr.co.infovine.dkmm.db.model.define.TDefineWork">
    /* 업적등록 insertDefineWork */
    INSERT INTO t_define_work
	  (
	     work_nm
	    ,work_condition
	    ,work_cnt
        ,work_text
	    ,point
	    ,except_condition
	    ,start_dt
	    ,end_dt
	    ,nick_seq
	    ,work_type
	    ,ins_dt
	    ,ins_seq
	    ,upt_seq
	    ,upt_dt
	    ,work_condition_desc
	    ,zombie_yn
	    ,limit_yn
	    ,unit_txt
	  )
	  VALUES
	  (
	    #{workNm ,jdbcType=VARCHAR}
	    ,#{workCondition ,jdbcType=VARCHAR}
	    ,#{workCnt ,jdbcType=VARCHAR}
        ,#{workText ,jdbcType=VARCHAR}
	    ,#{point ,jdbcType=VARCHAR}
	    ,#{exceptCondition ,jdbcType=VARCHAR}
	    ,#{startDt ,jdbcType=VARCHAR}
	    ,#{endDt ,jdbcType=VARCHAR}
	    ,#{nickSeq}
	    ,#{workType ,jdbcType=VARCHAR}
	    ,NOW()
	    ,1
	    ,1
	    ,NOW()
	    ,#{workConditionDesc ,jdbcType=VARCHAR}
	    ,#{zombieYn ,jdbcType=VARCHAR}
	    ,#{limitYn ,jdbcType=VARCHAR}
	    ,#{unitTxt ,jdbcType=VARCHAR}
	  )
    
    
    </insert>
</mapper>